{
  "hash": "28563ae7fba8b549b51624ca65871809",
  "result": {
    "markdown": "---\ntitle: \"Conditioning\"\nformat:\n  revealjs:\n    author: \"STAT 20: Introduction to Probability and Statistics\"\n    height: 900\n    width: 1600\n    theme: ../../assets/slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: c\n    incremental: false\n    center: false\n    menu: false\n    highlight-style: github\n    progress: false\n    code-overflow: wrap\n    title-slide-attributes:\n      data-background-image: ../../assets/stat20-hex-bg.png\n      data-background-size: contain\nexecute:\n  echo: true\n---\n\n\n## Agenda\n\n\n::: {.cell}\n\n:::\n\n\n- Concept Questions\n- Data Pipelines\n- *Break*\n- Worksheet - Digital\n- Lab 3.1: Flights \n\n# Concept Questions\n\n## Question 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\"fruit\", \"fruit\", \"vegetable\") == \"fruit\"\n```\n:::\n\n\n:::{.poll}\nWhat will this line of code return?\n\nRespond at `pollev.com`.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_b7cccbab\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n## Evaluating equivalence, cont.\n\nIn R, this evaluation happens element-wise when operating on vectors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\"fruit\", \"fruit\", \"vegetable\") == \"fruit\"\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1]  TRUE  TRUE FALSE\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\"fruit\", \"fruit\", \"vegetable\") != \"fruit\"\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE FALSE  TRUE\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\"fruit\", \"vegetable\", \"boba\") %in% c(\"fruit\", \"vegetable\")\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1]  TRUE  TRUE FALSE\n```\n:::\n:::\n\n\n## Question 2\n\nWhich observations will be included in the following data frame?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(class_survey, \n       coding_exp_scale < 3,\n       olympic_sport %in% c(\"Ice skating\", \"Speed skating\"),\n       entrepreneur == TRUE)\n```\n:::\n\n\n:::{.poll}\nPlease respond at `pollev.com`.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_81845fe0\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## Question 3: Opinion\n\n10. What are students’ perceptions of the chance that there is a new COVID variant that disrupts instruction in Spring 2023?\n\n:::{.poll}\nDo you think students in their first semester would be *more* likely or *less* likely to think we would remain in remote learning for the entire semester?\n\nAnswer at `pollev.com`.\n:::\n\n:::notes\nQ: what is the comparison group: all students or students who are not in their first semester?\n:::\n\n## Question 4\n\n:::{.poll}\nWhich data frame will have fewer rows?\n:::\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_survey <- mutate(class_survey, \n                       first_sem = year == \"This is my first semester!\")\n\n# this one\ndf_1 <- filter(class_survey, first_sem)\n\n# or this one\ndf_2 <- filter(class_survey, year == \"This is my first semester!\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_b122b787\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n# Building data pipelines\n\n\n## Question 2 Redux {auto-animate=true}\n\nHow do we extract the average of these students' chance that class will be disrupted by a new COVID variant?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(class_survey, \n       coding_exp_scale < 3,\n       olympic_sport %in% c(\"Ice skating\", \"Speed skating\"),\n       entrepreneur == TRUE)\n```\n:::\n\n\n## Question 2 Redux {auto-animate=true}\n\nHow do we extract the average of these students' chance that class will be disrupted by a new COVID variant?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(filter(class_survey, \n       coding_exp_scale < 3,\n       olympic_sport %in% c(\"Ice skating\", \"Speed skating\"),\n       entrepreneur == TRUE),\n       coding_exp_xcale,\n       olympic_sport,\n       entrepreneur,\n       new_COVID_variant)\n```\n:::\n\n\n## Question 2 Redux {auto-animate=true}\n\nHow do we extract the average of these students' chance that class will be disrupted by a new COVID variant?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(select(filter(class_survey, \n       coding_exp_scale < 3,\n       olympic_sport %in% c(\"Ice skating\", \"Speed skating\"),\n       entrepreneur == TRUE),\n       coding_exp_scale,\n       olympic_sport,\n       entrepreneur,\n       new_COVID_variant),\n       covid_avg = mean(new_COVID_variant))\n```\n:::\n\n\n## Question 2 Redux {auto-animate=true}\n\nHow do we extract the average of these students' chance that class will be disrupted by a new COVID variant?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(select(filter(class_survey, \n       coding_exp_scale < 3,\n       olympic_sport %in% c(\"Ice skating\", \"Speed skating\"),\n       entrepreneur == TRUE),\n       coding_exp_scale,\n       olympic_sport,\n       entrepreneur,\n       new_COVID_variant),\n       covid_avg = mean(new_COVID_variant))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  covid_avg\n      <dbl>\n1      0.52\n```\n:::\n:::\n\n\n\n## Data Pipelines\n\n. . .\n\nMost claims about data start with a *raw* data set, undergo many subsetting, aggregating, and cleaning operations, then return a *data product*.\n\n![](images/pipeline-1.png)\n\n. . .\n\n> Let's look at three equivalent ways to build a pipeline\n\n\n## Nesting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(select(filter(class_survey, \n       coding_exp_scale < 3,\n       olympic_sport %in% c(\"Ice skating\", \"Speed skating\"),\n       entrepreneur == TRUE),\n       coding_exp_scale,\n       olympic_sport,\n       entrepreneur,\n       new_COVID_variant),\n       covid_avg = mean(new_COVID_variant))\n```\n:::\n\n\n. . .\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n**Cons**\n\n- Must be read from inside out 👎 \n- Hard to keep track of arguments 👎 \n:::\n\n::: {.column width=\"50%\"}\n**Pros**\n\n- All in one line of code 👍\n- Only refer to one data frame 👍\n:::\n\n::::\n\n\n## Step-by-step\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- filter(class_survey, \n              coding_exp_scale < 3,\n              olympic_sport %in% c(\"Ice skating\", \"Speed skating\"),\n              entrepreneur == TRUE)\ndf2 <- select(df1, \n              coding_exp_scale,\n              olympic_sport,\n              entrepreneur,\n              new_COVID_variant)\nsummarize(df2,\n          covid_avg = mean(new_COVID_variant))\n```\n:::\n\n\n. . .\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n**Cons**\n\n- Have to repeat data frame names 👎 \n- Creates unnecessary objects 👎 \n:::\n\n::: {.column width=\"50%\"}\n**Pros**\n\n- Stores intermediate objects 👍\n- Can be read top to bottom 👍\n:::\n\n::::\n\n\n##\n\n![](images/pipeline-2.png)\n\n\n## Using the pipe operator\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_survey %>%\n  filter(coding_exp_scale < 3,\n         olympic_sport %in% c(\"Ice skating\", \"Speed skating\"),\n         entrepreneur == TRUE) %>%\n  select(coding_exp_scale,\n         olympic_sport,\n         entrepreneur,\n         new_COVID_variant) %>%\n  summarize(covid_avg = mean(new_COVID_variant))\n```\n:::\n\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n**Cons**\n\n- 🤷 \n:::\n\n::: {.column width=\"50%\"}\n**Pros**\n\n- Can be read like an english paragraph 👍\n- Only type the data once 👍\n- No leftovers objects 👍\n:::\n\n::::\n\n\n## Understanding your pipeline\n\n. . .\n\nIt's good practice to understand the output of each line of code by *breaking the pipe*.\n\n. . .\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n```{r \n#| echo: true\n#| eval: true\n#| error: true\nclass_survey %>%\n  select(new_COVID_variant) %>%\n  filter(year == \"It's my first year.\")\n```\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_survey %>%\n  select(new_COVID_variant)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 621 × 1\n   new_COVID_variant\n               <dbl>\n 1           0.25   \n 2           0.1    \n 3           0      \n 4           0.2    \n 5           0.9    \n 6           0.2    \n 7           0.4    \n 8           0.00005\n 9           0.2    \n10           0.3    \n# … with 611 more rows\n```\n:::\n:::\n\n:::\n\n::::\n\n\n## Question 5\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_survey %>% # A #<<\n  filter(coding_exp_scale < 3,\n         olympic_sport %in% c(\"Ice skating\", \n                         \"Speed skating\"),\n         entrepreneur == TRUE) %>% # B #<<\n  select(coding_exp_scale,\n         olympic_sport,\n         entrepreneur,\n         new_COVID_variant) %>% # C #<<\n  summarize(covid_avg = mean(new_COVID_variant)) # D #<<\n```\n:::\n\n\n:::{.poll}\nWhat are the dimensions (rows x columns) of the data frames output at each stage of this pipe?\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_b516f37e\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n\n\n## Question 2: Code\n\nDo you think first year students would be more likely or less likely to think we would remain in remote learning for the entire semester?\n\n:::{.poll}\nWhich commands are needed to help answer this question?\n:::\n\n:::{layout-ncol=2}\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_survey %>%\n    filter(year) %>%\n```\n:::\n\n\n:::\n\n## Describing `new_COVID_variant`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(stat20data)\nclass_survey <- class_survey %>%\n  select(year, new_COVID_variant) %>%\n  mutate(new_COVID_variant = round(new_COVID_variant, digits = 2))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_survey, aes(x = new_COVID_variant)) +\n  geom_histogram()\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n\nAside: *density plot*\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_survey, aes(x = new_COVID_variant)) +\n  geom_density() #<<\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n## Describing `new_COVID_variant`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_survey, aes(x = new_COVID_variant)) +\n  geom_histogram()\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-29-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(class_survey,\n          mean = mean(new_COVID_variant),\n          med = median(new_COVID_variant),\n          iqr = IQR(new_COVID_variant),\n          sd = sd(new_COVID_variant))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n   mean   med   iqr    sd\n  <dbl> <dbl> <dbl> <dbl>\n1 0.368   0.3  0.35 0.467\n```\n:::\n:::\n\n\nThe distribution of probabilities of **all** students is right-skewed with a mean probability of 0.37 and a median probability of 0.3, an IQR of 0.35 and a SD of 0.47.\n\n## Describing first year students\n\nHow can we focus our analysis on just first year students?\n\n. . .\n\n**General goal**: Identify whether the *value* in a variable meets a *condition*.\n\n > Here: Is the value in `new_COVID_variant` equal to `\"I'm in my first year.\"`?\n\n. . .\n\n**Our Tool, Comparison operators**: A collection of operators that compare two values / vectors and return `TRUE` or `FALSE`.\n\n## Evaluating equivalence\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"fruit\" == \"vegetable\"\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"fruit\" == \"fruit\"\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"fruit\" != \"fruit\"\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n:::\n\n\n. . .\n\n> `==` evaluates equality, `!=` evaluates inequality.\n\n\n## Adding a grouping variable\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_survey <- mutate(class_survey,\n                       first_year = year == \"I'm in my first year.\")\nclass_survey\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 621 × 3\n   year                       new_COVID_variant first_year\n   <chr>                                  <dbl> <lgl>     \n 1 I'm in my second year.                  0.25 FALSE     \n 2 This is my first semester!              0.1  FALSE     \n 3 This is my first semester!              0    FALSE     \n 4 I'm in my second year.                  0.2  FALSE     \n 5 I'm in my first year.                   0.9  TRUE      \n 6 I'm in my second year.                  0.2  FALSE     \n 7 I'm in my second year.                  0.4  FALSE     \n 8 I'm in my second year.                  0    FALSE     \n 9 I'm in my second year.                  0.2  FALSE     \n10 I'm in my first year.                   0.3  TRUE      \n# … with 611 more rows\n```\n:::\n:::\n\n\n# Filtering data using logical vectors\n\n## Filtering rows\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfirst_yr_df <- filter(class_survey, first_year)\nfirst_yr_df\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 245 × 3\n   year                  new_COVID_variant first_year\n   <chr>                             <dbl> <lgl>     \n 1 I'm in my first year.               0.9 TRUE      \n 2 I'm in my first year.               0.3 TRUE      \n 3 I'm in my first year.               0.6 TRUE      \n 4 I'm in my first year.               0.3 TRUE      \n 5 I'm in my first year.               0.3 TRUE      \n 6 I'm in my first year.               0.1 TRUE      \n 7 I'm in my first year.               0.7 TRUE      \n 8 I'm in my first year.               0.2 TRUE      \n 9 I'm in my first year.               0.5 TRUE      \n10 I'm in my first year.               0.5 TRUE      \n# … with 235 more rows\n```\n:::\n:::\n\n\n\n## Describing `new_COVID_variant` with statistics\n\nStatistics from *all* students\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(class_survey,\n          mean = mean(new_COVID_variant),\n          med = median(new_COVID_variant),\n          iqr = IQR(new_COVID_variant),\n          sd = sd(new_COVID_variant))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n   mean   med   iqr    sd\n  <dbl> <dbl> <dbl> <dbl>\n1 0.368   0.3  0.35 0.467\n```\n:::\n:::\n\n\nStatistics from *first year* students\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(first_yr_df,\n          mean = mean(new_COVID_variant),\n          med = median(new_COVID_variant),\n          iqr = IQR(new_COVID_variant),\n          sd = sd(new_COVID_variant))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n   mean   med   iqr    sd\n  <dbl> <dbl> <dbl> <dbl>\n1 0.398   0.3   0.3 0.561\n```\n:::\n:::\n\n\n## Describing `new_COVID_variant` with graphics\n\n\nHistogram for *all* students\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_survey, aes(x = new_COVID_variant)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-39-1.png){width=960}\n:::\n:::\n\n\nHistograms from *first year* and non-first year students\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_survey, aes(x = new_COVID_variant)) +\n  geom_histogram() +\n  facet_wrap(vars(first_year))\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-40-1.png){width=960}\n:::\n:::\n\n\n\n\n## Example 1\n\n> What is the mean probability of `new_COVID_variant` for students who were very confident that we could engineer our way out of the effects of climate change (6 or above on `climate_change`)?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_survey\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 621 × 3\n   year                       new_COVID_variant first_year\n   <chr>                                  <dbl> <lgl>     \n 1 I'm in my second year.                  0.25 FALSE     \n 2 This is my first semester!              0.1  FALSE     \n 3 This is my first semester!              0    FALSE     \n 4 I'm in my second year.                  0.2  FALSE     \n 5 I'm in my first year.                   0.9  TRUE      \n 6 I'm in my second year.                  0.2  FALSE     \n 7 I'm in my second year.                  0.4  FALSE     \n 8 I'm in my second year.                  0    FALSE     \n 9 I'm in my second year.                  0.2  FALSE     \n10 I'm in my first year.                   0.3  TRUE      \n# … with 611 more rows\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptimist_df <- filter(class_survey, climate_change >= 6)\nsummarize(optimist_df, mean(new_COVID_variant))\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(class_survey, mean(new_COVID_variant))\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  `mean(new_COVID_variant)`\n                      <dbl>\n1                     0.368\n```\n:::\n:::\n\n\n\n## Example 2\n\n> What is the mean probability of `new_COVID_variant` for **first-year** students who were very confident that we could engineer our way out of the effects of climate change (6 or above on `climate_change`)?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"class_survey\")\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptimist_df <- filter(class_survey,\n                      climate_change >= 6,\n                      year == \"I'm in my first year.\")\nsummarize(optimist_df, mean(new_COVID_variant))\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  `mean(new_COVID_variant)`\n                      <dbl>\n1                     0.370\n```\n:::\n:::\n\n\n. . .\n\n> You can string together conditions by adding them as arguments to `filter()` separated by commas.\n--\n> What else can logical vectors be used for?\n\n##\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(class_survey, mean(year == \"I'm in my first year.\"))\n```\n:::\n\n\n:::{.poll}\nWhat is will this line of code return?\n\nRespond at `pollev.com`.\n:::\n\n\n## Boolean Algebra\n\nLogical vectors have a dual representation as `TRUE` `FALSE` and `1`, `0`, so you can do math on logicals accordingly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTRUE + TRUE\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTRUE * TRUE\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n:::\n\n\n. . .\n\n> Taking the mean of a logical vector is equivalent to find the proportion of rows that are `TRUE` (i.e. the proportion of rows that meet the condition).\n\n# Break\n\n# Worksheet - Digital\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_758dab13\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">25</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::",
    "supporting": [
      "slides_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}