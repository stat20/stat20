{
  "hash": "e52f335b92e4f5b923f62badb766cea5",
  "result": {
    "markdown": "---\ntitle: \"Taxonomy of Data\"\nformat:\n  revealjs:\n    author: \"STAT 20: Introduction to Probability and Statistics\"\n    height: 900\n    width: 1600\n    theme: ../../assets/slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: c\n    incremental: false\n    center: false\n    menu: false\n    highlight-style: github\n    progress: false\n    code-overflow: wrap\n    title-slide-attributes:\n      data-background-image: ../../assets/stat20-hex-bg.png\n      data-background-size: contain\n---\n\n\n## Agenda\n\n- Concept Questions: Taxonomy of Data\n- Reading Questions\n- Worksheet on Paper\n- *Break*\n- Worksheet via RStudio\n\n# Concept Questions\n\n\n## Types of Variables\n\nThere are three things a variable could be referring to\n1. a phenomenon\n2. how the phenomenon is being recorded or measured into data\n   - what values can it take? (this is often an intent- or value-laden exercise!)\n   - for numerical units, what unit should we express it in?\n3. How the recorded data is being analyzed\n   - binning/discretizing income data\n   - if a barchart has too many bars, using a histogram.\n\n\n##\n\n\\\n\\\n\n:::{.poll}\nWhat type of variable is *age*?\n\n\\\n\nAnswer at `pollev.com/<name>`\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_2eb1690a\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## {data-menu-title=\"Shoebill Pic 1\" background-image=\"images/shoebill-1.png\" background-size=\"contain\"}\n\n## Images as data\n\n:::: {.columns}\n\n::: {.column width=\"55%\" .incremental}\n- Images are composed of pixels (this image is 1012 by 1520)\n- The color in each pixel is in RGB\n  \n  ![](images/rgb.png){width=\"460\"}\n\n- Each band takes a value from 0-255\n- This image is data with 1020 x 1520 x 3 values.\n:::\n\n::: {.column width=\"45%\"}\n![](images/shoebill-1.png){fig-alt=\"A shoebill with a duck in its mouth.\" width=\"800\"}\n:::\n\n::::\n\n\n## Grayscale\n\n:::: {.columns}\n\n::: {.column width=\"55%\" .incremental}\n- Grayscale images have only one band\n- 0 is black, 255 is white\n- This image is data with 1020 x 1520 x 1 values.\n\n:::{.fragment}\n> To simplify, assume our photos are 8 x 8 grayscale images.\n\n:::\n:::\n\n::: {.column width=\"45%\"}\n![](images/shoebill-1-grayscale.png){fig-alt=\"A shoebill with a duck in its mouth in grayscale.\" width=\"800\"}\n:::\n\n::::\n\n\n## Images in a Data Frame\n\n:::: {.columns}\n\n::: {.column width=\"33%\"}\n![](images/shoebill-1.png)\n:::\n\n::: {.column width=\"33%\"}\n![](images/shoebill-2.png)\n:::\n\n::: {.column width=\"34%\"}\n![](images/shoebill-3.png)\n:::\n\n::::\n\n:::{.poll}\nIf you were to put the data from these (8 x 8 grayscale) images into a *data frame*, what would the dimensions of that data frame be in rows x columns?\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_dd2fc7e1\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n# Reading Questions\n\n# Worksheet on Paper\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_cce15e36\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">20</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n# Worksheet via RStudio\n\n## \n\nDemo\n\n## Your turn\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_5585c7cd\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">20</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::",
    "supporting": [
      "slides-andrew_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}