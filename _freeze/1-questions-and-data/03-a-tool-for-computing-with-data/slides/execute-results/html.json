{
  "hash": "5b03ce8350d4c19ff33fcba9447795ec",
  "result": {
    "markdown": "---\ntitle: \"A Tool for Computing with Data\"\nformat:\n  revealjs:\n    author: \"STAT 20: Introduction to Probability and Statistics\"\n    height: 900\n    width: 1600\n    theme: ../../assets/slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: c\n    incremental: false\n    center: false\n    menu: false\n    highlight-style: github\n    progress: false\n    code-overflow: wrap\n    title-slide-attributes:\n      data-background-image: ../../assets/stat20-hex-bg.png\n      data-background-size: contain\n---\n\n\n## Agenda\n\n- PollEv competition\n- Concept Questions: Intro to Computing with R\n- R Workshop\n  - Functions and Vectors\n  - Data Frames\n- Break\n- Lab 1: Arbuthnot\n\n# PollEv competition\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_e7148fef\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">08</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n# Concept Questions\n\n## Educated Guess 1\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/shobhana`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + \"one\"\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_3c8ee315\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\n- \"one\" is a string with no link at all to the number 1\n- without that link, without two objects that are recognized for their numerical value, `+` doesn't work.\n:::\n\n## Educated Guess 2\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/shobhana`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- c(1, 2, 3, 4)\nsqrt(log(a))\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_70c63d54\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\nTalking points\n- a is a vector of length four\n- log and sqrt are functions that will return vectors of length four\n- they're nested and will be evaluated from the inside out\n:::\n\n\n## Educated Guess 3\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/shobhana`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 1 + 2\na + 1\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_d4ee373a\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\n- a is a not a string, it's the name of an object that's a number\n- to overwrite a with `a + 1` requires re-assigning it to a: `a <- a + 1` (in some languages, `a + 1` would change the value of a)\n- `a <- a + 1` is a good time to mention that while `a = a + 1` works in R and they might see it online, its convention to use <- for many reasons including that mathematically the statement with = is confusing.\n:::\n\n## Educated Guess 4\n\n:::{.poll}\nWhat will happen here?\n\n\\\n\nAnswer at `pollev.com/shobhana`\n:::\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- c(1, 3.14, \"seven\")\nclass(a)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_023e59ff\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n:::{.notes}\n- the definition of a vector requires every element to be of the same type\n- based on their reading, there are three classes that they're familiar with: numeric, factor, and character\n- there's no way to translate \"seven\" into 7, so instead 1 and 3.14 must be translated into strings\n- they will likely encounter this when looking at a data set in R (or other languages) and finding that vectors with what looked like numbers are stored as strings. This usually happens because there's a single errant character that the language doesn't know how to parse as a number.\n:::\n\n# Reading Questions\n\n# Question 1\n\nWhich of the following best describes the distinction between R and RStudio?\n\n- They're synonyms for the same thing.\n- R is the language; RStudio is the tool we'll use to write and run R code.\n- RStudio is the newer edition of the R language.\n- R is a language of statistical computing; RStudio runs Excel.\n\n# Question 2\n\nHow do you save the output of an R command into your Environment?\n\n- Wrap the command in parentheses `()`.\n- Wrap the command in curly braces `{}`.\n- Use the assignment arrow and provide a name for the output.\n- Drag and drop the command into your environment.\n\n\n## Question 3\n\nThe atomic building block of the R language is the ...\n\n- vector\n- variable\n- numeric\n- factor\n- data frame\n\n\n## Question 4\n\nWhat type of vector can be used to best represent ordinal and nominal categorical variables?\n\n- the variable\n- numeric\n- continuous\n- discrete\n- factor\n\n# R Workshop\n\n## Components of RStudio\n\n1. Console\n\n2. Environment\n\n3. Editor\n\n4. File Directory\n\n> Now we are going to switch over to RStudio to understand these 4 components a bit better.\n\n## Components of RStudio\n\n1. **Console**: Where the live R session lives. Type commands into the prompt `>` and press enter/return to run them. The Console is in the lower-left pane.\n\n2. **Environment**: The space that keeps track of all of the data and objects that you have created or loaded and have access to. Found in the upper right pane.\n\n3. **Editor**: Used to compose and edit text (.qmd files) and R code (.r files). Found in the upper left pane.\n\n4. **File Directory**: Used to navigate between your files/folders on your Rstudio account. Can move, copy, rename, delete, etc. Found in the lower right pane.\n\n\n## R as a calculator\n\nR allows all of the standard arithmetic operations.\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n**Addition**\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n\n**Subtraction**\n\n::: {.cell}\n\n```{.r .cell-code}\n1 - 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -1\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n**Multiplication**\n\n::: {.cell}\n\n```{.r .cell-code}\n1 * 2 \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\n**Division**\n\n::: {.cell}\n\n```{.r .cell-code}\n1 / 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5\n```\n:::\n:::\n\n:::\n\n::::\n\n\n## R as a calculator, cont.\n\nR allows all of the standard arithmetic operations.\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n**Exponents**\n\n::: {.cell}\n\n```{.r .cell-code}\n2 ^ 3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n**Parentheses for Order of Ops.**\n\n::: {.cell}\n\n```{.r .cell-code}\n2 ^ 3 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n2 ^ (3 + 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n:::\n\n:::\n\n::::\n\n## Your turn\n\n:::{.poll}\nWhat is three times one point two raised to the quantity thirteen divided six?\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_7a93cdb9\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n## Object assignment {.scrollable}\n\nYou can create/save objects using the assignment operator `<-` . This is the equivalent of `=` in other programming languages. Note: be careful about spacing. `<-` is quite different from `< -`. One is an arrow, the other is a \"greater than\" followed by a \"minus\".\n\nShortcut to write `<-` in RStudio: if you are on a mac type `option` and `-` simultaneously. On a PC type `alt` and `-` at the same time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_fav_num <- 11\n```\n:::\n\n\n. . .\n\nIn order to be recognized as a valid object name, you have to follow certain conventions; namely, the object name should begin with a letter.\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> good names </th>\n   <th style=\"text-align:left;\"> names that cause errors </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> a </td>\n   <td style=\"text-align:left;\"> 1trial </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> b </td>\n   <td style=\"text-align:left;\"> $ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> FOO </td>\n   <td style=\"text-align:left;\"> ^mean </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> my_var </td>\n   <td style=\"text-align:left;\"> my var </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Functions on vectors\n\nA *vector* is the simplest structure used in R to store data. It can be created using the function `c()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_vector <- c(1, 3, 4)\nmy_vector\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 3 4\n```\n:::\n:::\n\n\n. . .\n\nA *function* operates on an R object and produces output. R has many of the mathematical functions that you would expect.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(my_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8\n```\n:::\n:::\n\n\n\n## Your Turn\n\n:::{.poll}\n1. Create a vector named `vec` with the even integers between 1 and 10 as well as the number 99 (six elements total).\n\n2. Find the sum of that vector.\n\n3. Find the max of that vector.\n\n4. Take the mean of that vector and round it to the nearest integer.\n:::\n\nThese should all be solved with R code. If you don't know the name of a function to use, with hazard a guess by looking for a help file (e.g. `?sum`) or google it.\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_c03d1994\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\n##\n\nDemo of:\n\n1. Creating an R script\n2. Saving it\n3. Typing in code that answers previous question\n4. How to run code from a script\n  - Put cursor on line and click \"Run\"\n  - Put cursor on line and type command+return.\n  - Copy and paste to the console.\n  \n:::{.notes}\nvec <- c(2, 4, 6, 8, 10, 99)\nsum(vec)\nmax(vec)\n?round\nround(mean(vec))\n:::\n\n\n## Building a data frame\n\nYou can combine vectors into a data frame using `data.frame()`[^1]\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbill_depth_mm <- c(15.0, 17.1, 18.7, 18.9)\nbill_length_mm <- c(47.5, 40.2, 39.0, 35.3)\nspecies <- c(\"Gentoo\", \"Adelie\", \"Adelie\", \"Adelie\")\n```\n:::\n\n\n\\\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_df <- data.frame(bill_depth_mm, bill_length_mm, species)\npenguins_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  bill_depth_mm bill_length_mm species\n1          15.0           47.5  Gentoo\n2          17.1           40.2  Adelie\n3          18.7           39.0  Adelie\n4          18.9           35.3  Adelie\n```\n:::\n:::\n\n\n[^1]: You can also use the `tibble()` function from the `tidyverse` package.\n\n\n# Your Turn\n\n:::{.poll}\n1. Create an .r script, name it, and save it.\n\n2. Create three vectors, `name`, `favorite_color`, and `favorite_number` that contain observations on those variables from 5 people in this class.\n\n3. Combine them into a data frame called `my_classmates`.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_ab08d531\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">06</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## Loading Packages\n\nR has a vast ecosystem of packages that add new functions. Any installed package can be loaded with the `library()` function.\n\n. . .\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n![](images/hexes.png)\n:::\n\n::: {.column width=\"50%\" .fragment}\n<!-- ![](images/tidyverse-hex.png){width=\"350px\" fig-align=center} -->\n\nOur two main packages:\n\n- `tidyverse`\n- `stat20data`\n\nLoad them with:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(stat20data)\n```\n:::\n\n\n:::\n\n::::\n\n## Loading data from a package\n\nMost data you will *not* be creating by hand. You will either be\n\n1. Loading it in from a separate file.\n\n2. Loading it from within an R package (most of our are in `stat20data`)\n\n. . .\n\nTo load data from a package,\n\n1. load that package with `library()`\n2. You can then print the data to the console by typing its name and pressing enter or see it in the viewer with `View(<df name>)`.\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stat20data)\npenguins\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 333 × 8\n   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007\n 2 Adelie  Torgersen           39.5          17.4        186    3800 fema…  2007\n 3 Adelie  Torgersen           40.3          18          195    3250 fema…  2007\n 4 Adelie  Torgersen           36.7          19.3        193    3450 fema…  2007\n 5 Adelie  Torgersen           39.3          20.6        190    3650 male   2007\n 6 Adelie  Torgersen           38.9          17.8        181    3625 fema…  2007\n 7 Adelie  Torgersen           39.2          19.6        195    4675 male   2007\n 8 Adelie  Torgersen           41.1          17.6        182    3200 fema…  2007\n 9 Adelie  Torgersen           38.6          21.2        191    3800 male   2007\n10 Adelie  Torgersen           34.6          21.1        198    4400 male   2007\n# … with 323 more rows, and abbreviated variable names ¹​flipper_length_mm,\n#   ²​body_mass_g\n```\n:::\n:::\n\n\n\n\n# Functions on data frames\n\n## 3 functions from the `tidyverse`\n\nThe `tidyverse` package contains several functions used to manipulate data frames: \n\n. . .\n\n- `select()` : subset columns \n\n. . .\n\n- `arrange()` : sort rows \n\n. . .\n\n- `mutate()` : create a new column from existing column(s)\n\n\n## Selecting columns\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(penguins, species, island)\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 333 × 2\n   species island   \n   <fct>   <fct>    \n 1 Adelie  Torgersen\n 2 Adelie  Torgersen\n 3 Adelie  Torgersen\n 4 Adelie  Torgersen\n 5 Adelie  Torgersen\n 6 Adelie  Torgersen\n 7 Adelie  Torgersen\n 8 Adelie  Torgersen\n 9 Adelie  Torgersen\n10 Adelie  Torgersen\n# … with 323 more rows\n```\n:::\n:::\n\n\n\n## Arranging the rows of a data frame\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(penguins, bill_length_mm)\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 333 × 8\n   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Dream               32.1          15.5        188    3050 fema…  2009\n 2 Adelie  Dream               33.1          16.1        178    2900 fema…  2008\n 3 Adelie  Torgersen           33.5          19          190    3600 fema…  2008\n 4 Adelie  Dream               34            17.1        185    3400 fema…  2008\n 5 Adelie  Torgersen           34.4          18.4        184    3325 fema…  2007\n 6 Adelie  Biscoe              34.5          18.1        187    2900 fema…  2008\n 7 Adelie  Torgersen           34.6          21.1        198    4400 male   2007\n 8 Adelie  Torgersen           34.6          17.2        189    3200 fema…  2008\n 9 Adelie  Biscoe              35            17.9        190    3450 fema…  2008\n10 Adelie  Biscoe              35            17.9        192    3725 fema…  2009\n# … with 323 more rows, and abbreviated variable names ¹​flipper_length_mm,\n#   ²​body_mass_g\n```\n:::\n:::\n\n\n. . .\n\n> You can sort in descending order by wrapping the variable name in `desc()`.\n\n\n## Mutating a new column\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutate(penguins, bill_index = bill_depth_mm + bill_length_mm)\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 333 × 9\n   species island    bill_length_mm bill_d…¹ flipp…² body_…³ sex    year bill_…⁴\n   <fct>   <fct>              <dbl>    <dbl>   <int>   <int> <fct> <int>   <dbl>\n 1 Adelie  Torgersen           39.1     18.7     181    3750 male   2007    57.8\n 2 Adelie  Torgersen           39.5     17.4     186    3800 fema…  2007    56.9\n 3 Adelie  Torgersen           40.3     18       195    3250 fema…  2007    58.3\n 4 Adelie  Torgersen           36.7     19.3     193    3450 fema…  2007    56  \n 5 Adelie  Torgersen           39.3     20.6     190    3650 male   2007    59.9\n 6 Adelie  Torgersen           38.9     17.8     181    3625 fema…  2007    56.7\n 7 Adelie  Torgersen           39.2     19.6     195    4675 male   2007    58.8\n 8 Adelie  Torgersen           41.1     17.6     182    3200 fema…  2007    58.7\n 9 Adelie  Torgersen           38.6     21.2     191    3800 male   2007    59.8\n10 Adelie  Torgersen           34.6     21.1     198    4400 male   2007    55.7\n# … with 323 more rows, and abbreviated variable names ¹​bill_depth_mm,\n#   ²​flipper_length_mm, ³​body_mass_g, ⁴​bill_index\n```\n:::\n:::\n\n\n\n. . .\n\n> Remember that you can nest functions.\n\n\n## Nesting functions\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(mutate(penguins, bill_index = bill_depth_mm + bill_length_mm), bill_index)\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 333 × 1\n   bill_index\n        <dbl>\n 1       57.8\n 2       56.9\n 3       58.3\n 4       56  \n 5       59.9\n 6       56.7\n 7       58.8\n 8       58.7\n 9       59.8\n10       55.7\n# … with 323 more rows\n```\n:::\n:::\n\n\n\n## Your turn\n\nThere is a built-in data set to R called `mtcars` that has information on cars that appeared in Motor Trend magazine. It's already loaded and can be accessed as `mtcars`.\n\n:::{.poll}\n1. Create a slimmer data frame that only contains the columns `hp` and `wt` and save it to `mtcars_slim`.\n\n2. Create a new column called `power_to_weight` that is the ratio of `hp` to `wt`. Save the three-column data frame back over `mtcars_slim`.\n\n3. Sort the data frame in descending order by the power-to-weight ratio.\n:::\n\nHint: look up help files!\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_8db3b03e\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;right:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">08</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## {background-color=\"#00403d\"}\n\n:::{.v-center-container style=\"text-align: center; font-size: 3em\"}\n{{< fa pause >}}\\\nBreak\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_49a62f7f\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n# Lab 1: Arbuthnot",
    "supporting": [
      "slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"slides_files/libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"slides_files/libs/countdown-0.4.0/countdown.js\"></script>\n<script src=\"slides_files/libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"slides_files/libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}