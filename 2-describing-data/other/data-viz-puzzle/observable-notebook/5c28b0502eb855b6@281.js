function _1(md){return(
md`# Data Viz Puzzle

`
)}

function _2(md){return(
md`This contains the source code in d3 and Observable Plot to generate the svg graphics that were part of the Data Viz Puzzle from Fall 2022 in Stat 20. Over the course of a week, a new graphic was posted to the course homepage, each one a slightly more informative version of the previous. It culminated in the plot found in Jeffrey Baker's "Californians from Oregon to Mexico". Students were invited to submit a guess of what was being depicted to a google form; the first correct entry won a prize.

Preceding versions of the graphic can be generated by commenting-out and -in various bits of the code below.`
)}

function _3(Plot,ca,cities){return(
Plot.plot({
  height: 8000,
  width: 1000,
  x: {
    domain: [.01,.99],
    ticks: 0,
  },
  marks: [
    Plot.dot(ca, Plot.dodgeX({y: "y", r: "pop", title: "pop", fill: "#003262", anchor: "middle"})),
    Plot.text(cities, {y: "y", x: 1, text: "text", frameAnchor: "right", fontSize: 19}),
    Plot.ruleY([42]),
    Plot.ruleY([32.522499]),
  ]
})
)}

function _d3(require){return(
require("d3@7")
)}

function _data_as_json(d3){return(
d3.csv("https://raw.githubusercontent.com/stat375/course-materials/master/pop-lat-area.csv")
)}

function _flatNodeHeirarchy(data_as_json,d3)
{
  let root = {children: data_as_json.slice(1)};
  return d3.hierarchy(root).sum(d => d.pop);
}


function _ca(FileAttachment){return(
FileAttachment("pop-lat-area@1.csv").csv({typed: true})
)}

function _ylabs(){return(
[
  {text: "35 -", y: 35.00},
  {text: "40 -", y: 40.00},
]
)}

function _cities(){return(
[
  {text: "Lincoln", y: 38.887121},
  {text: "Bell", y: 33.9775},
  {text: "Pittsburg", y: 38.0280},
  {text: "Sacramento", y: 38.581667},
  {text: "Redding, closer to Vancouver B.C. than to San Diego", y: 40.583333},
  {text: "Hollister", y: 36.8525},
  {text: "Eureka", y: 40.801944},
  {text: "Yuba City", y: 39.134722},
  {text: "San Francisco", y: 37.7775},
  {text: "San Jose", y: 37.336111},
  {text: "Santa Cruz", y: 36.971944},
  {text: "Chico, northernmost city of > 100k", y: 39.74},
  {text: "Fresno", y: 36.75},
  {text: "Bakersfield", y: 35.366667},
  {text: "L.A.", y: 34.05},
  {text: "San Diego", y: 32.715},
  {text: "Lancaster", y: 34.683333},
  {text: "Visalia", y: 36.330278},
  {text: "Porterville", y: 36.068611},
  {text: "Fremont", y: 37.548333},
  {text: "Stockton", y: 37.975556},
  {text: "Vacaville", y: 38.353889},
  {text: "Santa Clarita", y: 34.42},
  {text: "Ventura", y: 34.275},
  {text: "Pasadena", y: 34.156111},
  {text: "Riverside", y: 33.948056},
  {text: "Long Beach", y: 33.768333},
  {text: "Irvine", y: 33.669444},
  {text: "Carlsbad", y: 33.121944},
  {text: "Temecula", y: 33.503333},
  
]
)}

function _quantiles(){return(
[
  {text: "99% of Californians live south of here", y: 40.56137},
  {text: "90% of Californians live south of here", y: 38.46827},
  {text: "⅔ of Californians live south of here", y: 37.05021},
  {text: "½ of Californians live south of here", y: 34.24400},
  {text: "⅕ of Californians live south of here", y: 33.82428},
]
)}

function _paragraphs(){return(
[
  {text: "Marine Corps Base Camp Pendleton is the most populous census tract in California with 40k people.", y: 33.36},
  {text: "Each dot represents a single census tract. The small first dot is California's northernmost tract, Tract 2, Siskyou County, population 1,674. The larger tract below it contains Pelican Bay State Prison. Each tract is shown at the latitude of its centroid, without regard to its longitude. It's a big state, so scroll ↓", y: 41.85}, 
  ]
)}

export default function define(runtime, observer) {
  const main = runtime.module();
  function toString() { return this.url; }
  const fileAttachments = new Map([
    ["pop-lat-area@1.csv", {url: new URL("./files/b75a6d4601b979655f30bd646cfeabca2ff62d8be1da17d221eaa3ee2d22200b1dfada61e026712c2fa8b8459c8c9312673da7dd53340671928cd03b3a18c806.csv", import.meta.url), mimeType: "text/csv", toString}]
  ]);
  main.builtin("FileAttachment", runtime.fileAttachments(name => fileAttachments.get(name)));
  main.variable(observer()).define(["md"], _1);
  main.variable(observer()).define(["md"], _2);
  main.variable(observer()).define(["Plot","ca","cities"], _3);
  main.variable(observer("d3")).define("d3", ["require"], _d3);
  main.variable(observer("data_as_json")).define("data_as_json", ["d3"], _data_as_json);
  main.variable(observer("flatNodeHeirarchy")).define("flatNodeHeirarchy", ["data_as_json","d3"], _flatNodeHeirarchy);
  main.variable(observer("ca")).define("ca", ["FileAttachment"], _ca);
  main.variable(observer("ylabs")).define("ylabs", _ylabs);
  main.variable(observer("cities")).define("cities", _cities);
  main.variable(observer("quantiles")).define("quantiles", _quantiles);
  main.variable(observer("paragraphs")).define("paragraphs", _paragraphs);
  return main;
}
