---
title: "Quantifying Numerical Associations"
format: 
  stat20-slides-revealjs: default
---

## Agenda
- Types of associations

- Correlation and causation

- Rank based measures of association

- Correlations in the class survey


## What is the Pearson correlation?

```{r}
countdown::countdown(1, top = 0)
```

:::{.poll}
What is the Pearson correlation between these two variables.
:::

```{r}
library(tidyverse)
n_samples <- 100
set.seed(1)
x <- runif(n=n_samples, min=-1, max=1) 
y <- - x + rnorm(n=n_samples, mean=0, sd=.1)

data.frame(x=x, y=y) %>% ggplot(aes(x=x, y=y)) +  geom_point()
```


## What is the Pearson correlation?

```{r}
countdown::countdown(1, top = 0)
```

:::{.poll}
What is the Pearson correlation between these two variables.
:::


```{r}
library(tidyverse)
n_samples <- 100
set.seed(1)
x <- runif(n=n_samples, min=-1, max=1) 
y <- x^2 + rnorm(n=n_samples, mean=0, sd=.1)

data.frame(x=x, y=y) %>% ggplot(aes(x=x, y=y)) +  geom_point()
```


## 

```{r}
#| fig-align: center
#| fig-width: 8
#| fig-height: 5

# simulate data -----------------------------------------------------
set.seed(9274)

x1 <- seq(0, 6, by = 0.05)

y_u <- (x1-3)^2 - 4 + rnorm(length(x1), mean = 0, sd = 1)
y_lin_pos_strong <- 3*x1 + 10 + rnorm(length(x1), mean = 0, sd = 2)
y_lin_pos_weak <- 3*x1 + 10 + rnorm(length(x1), mean = 0, sd = 20)

x2 <- seq(-8, -2, by = 0.05)

y_n <- -1 * (x2 + 5)^2 + 1 + rnorm(length(x2), mean = 0, sd = 2)
y_lin_neg_strong <- -5 * x2 + 3 + rnorm(length(x2), mean = 0, sd = 2)
y_none <- rnorm(length(x2), mean = 0, sd = 1)

df <- data.frame(x = c(rep(x1, 3), rep(x2, 3)),
                 y = c(y_u, y_lin_pos_strong, y_lin_pos_weak,
                       y_n, y_lin_neg_strong, y_none),
                 plot_num = rep(LETTERS[1:6], each = length(x1)))

library(tidyverse)
pa <- df %>%
    filter(plot_num == "A") %>%
    ggplot(aes(x = x, 
               y = y)) +
    geom_point() +
    facet_wrap(vars(plot_num), scales = "free") +
    theme_bw(base_size = 14) +
    theme(axis.text.x=element_blank(),
          axis.ticks.x=element_blank(),
          axis.text.y=element_blank(),
          axis.ticks.y=element_blank()) +
    labs(x = "",
         y = "")

pb <- df %>%
    filter(plot_num == "B") %>%
    ggplot(aes(x = x, 
               y = y)) +
    geom_point() +
    facet_wrap(vars(plot_num), scales = "free") +
    theme_bw(base_size = 14) +
    theme(axis.text.x=element_blank(),
          axis.ticks.x=element_blank(),
          axis.text.y=element_blank(),
          axis.ticks.y=element_blank()) +
    labs(x = "",
         y = "")

pc <- df %>%
    filter(plot_num == "C") %>%
    ggplot(aes(x = x, 
               y = y)) +
    geom_point() +
    facet_wrap(vars(plot_num), scales = "free") +
    theme_bw(base_size = 14) +
    theme(axis.text.x=element_blank(),
          axis.ticks.x=element_blank(),
          axis.text.y=element_blank(),
          axis.ticks.y=element_blank()) +
    labs(x = "",
         y = "")

pd <- df %>%
    filter(plot_num == "D") %>%
    ggplot(aes(x = x, 
               y = y)) +
    geom_point() +
    facet_wrap(vars(plot_num), scales = "free") +
    theme_bw(base_size = 14) +
    theme(axis.text.x=element_blank(),
          axis.ticks.x=element_blank(),
          axis.text.y=element_blank(),
          axis.ticks.y=element_blank()) +
    labs(x = "",
         y = "")

pe <- df %>%
    filter(plot_num == "E") %>%
    ggplot(aes(x = x, 
               y = y)) +
    geom_point() +
    facet_wrap(vars(plot_num), scales = "free") +
    theme_bw(base_size = 14) +
    theme(axis.text.x=element_blank(),
          axis.ticks.x=element_blank(),
          axis.text.y=element_blank(),
          axis.ticks.y=element_blank()) +
    labs(x = "",
         y = "")

pf <- df %>%
    filter(plot_num == "F") %>%
    ggplot(aes(x = x, 
               y = y)) +
    geom_point() +
    facet_wrap(vars(plot_num), scales = "free") +
    theme_bw(base_size = 14) +
    ylim(-9, 9) +
    theme(axis.text.x=element_blank(),
          axis.ticks.x=element_blank(),
          axis.text.y=element_blank(),
          axis.ticks.y=element_blank()) +
    labs(x = "",
         y = "")

library(patchwork)
(pa + pb + pc) / (pd + pe + pf)
```

:::{.poll}
Which **four** plots exhibit the strongest association (linear or non-linear)?
:::

```{r}
countdown::countdown(1, top = 0)
```

:::{.notes}
Student will likely identify A, B, E, and F. F only appears to be highly associated because of the scaling of the y-axis. This is a good opportunity to review definition of association. The following slides demonstrate the effects of that scaling.
:::

## Pearson Correlation and Scale {auto-animate=true}

```{r}
#| echo: false
df_f <- filter(df, plot_num == "F") %>%
    select(x, y)
```


:::: {.columns}

::: {.column width="45%"}
```{r}
#| echo: true
#| eval: false
df_f
```
:::

::: {.column width="55%"}

:::

::::

## Pearson Correlation and Scale {auto-animate=true}

:::: {.columns}

::: {.column width="45%"}
```{r}
#| echo: true
df_f
```
:::

::: {.column width="55%"}

:::

::::

## Pearson Correlation and Scale {auto-animate=true}

:::: {.columns}

::: {.column width="45%"}
```{r}
#| echo: true
#| eval: false
df_f %>%
    ggplot(aes(x = x,
               y = y)) +
    geom_point() +
    ylim(-9, 9) +
    theme_bw()
```
:::

::: {.column width="55%"}

:::

::::

## Pearson Correlation and Scale {auto-animate=true}

:::: {.columns}

::: {.column width="45%"}
```{r}
#| echo: true
#| eval: false
df_f %>%
    ggplot(aes(x = x,
               y = y)) +
    geom_point() +
    ylim(-9, 9) +
    theme_bw()
```
:::

::: {.column width="55%"}
```{r}
#| echo: false
#| eval: true
#| fig-height: 8
df_f %>%
    ggplot(aes(x = x,
               y = y)) +
    geom_point(size = 5) +
    ylim(-9, 9) +
    theme_bw(base_size = 36)
```
:::

::::

## Pearson Correlation and Scale {auto-animate=true}

:::: {.columns}

::: {.column width="45%"}
```{r}
#| echo: true
#| eval: false
df_f %>%
    ggplot(aes(x = x,
               y = y)) +
    geom_point() +
    theme_bw()
```
:::

::: {.column width="55%"}

:::

::::

## Pearson Correlation and Scale {auto-animate=true}

:::: {.columns}

::: {.column width="45%"}
```{r}
#| echo: true
#| eval: false
df_f %>%
    ggplot(aes(x = x,
               y = y)) +
    geom_point() +
    theme_bw()
```
:::

::: {.column width="55%"}
```{r}
#| echo: false
#| eval: true
#| fig-height: 8
df_f %>%
    ggplot(aes(x = x,
               y = y)) +
    geom_point(size = 5) +
    theme_bw(base_size = 36)

```
:::

::::

## Pearson Correlation and Scale {auto-animate=true}

```{r}
#| echo: true
#| eval: false
df_f %>%
    summarize(pearson = cor(x, y))
```


## Pearson Correlation and Scale {auto-animate=true}

```{r}
#| echo: true
df_f %>%
    summarize(pearson = cor(x, y))
```



## Is there an association between these variables?

```{r}
countdown::countdown(1, top = 0)
```

:::{.poll}
Based on this plot, do you see evidence of an association between these two variables?
:::


```{r}
library(tidyverse)
n_samples <- 100
set.seed(1)
x <- runif(n=n_samples, min=-1, max=1) 
y <- x^2 + rnorm(n=n_samples, mean=0, sd=.1)

data.frame(x=x, y=y) %>% ggplot(aes(x=x, y=y)) +  geom_point()
```




## Where might you see a U-shaped association?

```{r}
countdown::countdown(4, top = 0)
```

```{r}
library(tidyverse)
n_samples <- 100
set.seed(1)
x <- runif(n=n_samples, min=-1, max=1) 
y <- x^2 + rnorm(n=n_samples, mean=0, sd=.1)

data.frame(x=x, y=y) %>% ggplot(aes(x=x, y=y)) +  geom_point()
```


:::{.poll}
Group discussion: Give examples in real life where you might expect to see this kind of U-shaped association? What about an inverted U shaped association?
:::



# Causation and correlation


## Does correlation imply causation?

```{r}
countdown::countdown(1, top = 0)
```

:::{.poll}
Does a strong measure of association imply that one variable causes another?
:::




## Does causation imply correlation?

```{r}
countdown::countdown(1, top = 0)
```

:::{.poll}
Does a casual relationship between two variables imply there is a correlation?
:::


:::{.notes}
Some "counter-examples" could include

- the causal variable has a small effect compared to other variables (e.g. a drug might have a small effect on a disease, but the patient's co-morbidities might have a much larger effect). 

- the relationship is non-linear e.g. U shaped so Pearson correlation would not really pick it up
:::

## Correlation and causation IRL

```{r}
countdown::countdown(5, top = 0)
```


:::{.poll}
In groups come up with examples of two variables that

1. One causes the other and they are strongly correlated

2. One causes the other and they are weakly correlated

3. No direct causal relationship and they are strongly correlated

4. No direct causal relationship and they are weakly correlated
:::




# Rank based methods of association

## Pearson correlation

```{r}
library(palmerpenguins)
library(tidyverse)
data(penguins)

penguins %>% 
    ggplot(aes(x=flipper_length_mm, y=body_mass_g)) +
    geom_point()
```


## Pearson correlation

```{r}
#| echo: true
penguins %>%  
    summarise(pearson=cor(flipper_length_mm, body_mass_g,
                          use='complete.obs'))
```


:::{.notes}
Emphasize the use='complete.obs' handles the NaNs, which is different than na.rm in mean().
:::


## Spearman correlation

```{r}
#| echo: true
penguins %>%  
    summarise(spearman=cor(flipper_length_mm, body_mass_g,
                           method='spearman', use='complete.obs'))
```


## Rank transformation

```{r}
#| echo: true
values <- c(2.6, 1.2, 3.9)
rank(values)
```


## Rank transformation

```{r}
penguins %>% 
    mutate(flipper_length_rank = rank(flipper_length_mm)) %>% 
    ggplot(aes(x=flipper_length_mm, y=flipper_length_rank)) +
    geom_point()
```


## Rank transformation

```{r}
penguins %>% 
    ggplot(aes(x=flipper_length_mm, y=body_mass_g)) +
    geom_point()
```


## Rank transformation
```{r}
penguins %>% 
    mutate(flipper_rank=rank(flipper_length_mm),
           body_mass_rank=rank(body_mass_g)) %>% 
    ggplot(aes(x=flipper_rank, y=body_mass_rank)) +
    geom_point()
```


## Spearman correlation by dplyr


```{r}
countdown::countdown(4, top = 0)
```


:::{.poll}
Calculate the spearman correlation between `flipper_length_mm` and `body_mass_g` without the `cor` function.
:::


## Spearman and robustness
```{r}
penguins %>% 
    ggplot(aes(x=flipper_length_mm, y=body_mass_g)) +
    geom_point()

```

```{r}
penguins%>%  
    summarise(pearson=cor(flipper_length_mm, body_mass_g,
                          method='pearson', use='complete.obs'),
              spearman=cor(flipper_length_mm, body_mass_g,
                           method='spearman', use='complete.obs'))
```



## Spearman and robustness
```{r}
penguins_outlier <- penguins %>% 
    add_row(flipper_length_mm=0, body_mass_g=7000) 


penguins_outlier %>% 
    ggplot(aes(x=flipper_length_mm, y=body_mass_g)) +
        geom_point()
```


```{r}
penguins_outlier %>%  
    summarise(pearson=cor(flipper_length_mm, body_mass_g,
                          method='pearson', use='complete.obs'),
              spearman=cor(flipper_length_mm, body_mass_g,
                          method='spearman', use='complete.obs'))
```

## Finding correlations in the class survey data
```{r}
countdown::countdown(10, top = 0)
```

:::{.poll}
In groups, answer the questions in the handout about the class survey data.
:::